(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
#mutate(idx = as.numeric(row.names(.))) # index column
print(row.names(.))
best_data <- data %>%
group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
summarize(tsum = mean(tsum)) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
#mutate(idx = as.numeric(row.names(.))) # index column
print(row.names())
best_data <- data %>%
group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
summarize(tsum = mean(tsum)) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names())) # index column
best_data <- data %>%
group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
summarize(tsum = mean(tsum)) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) # index column
#print(row.names())
best_data
ggplot(best_data, aes(x=idx, # index as x
y=tsum,
col=performance)) +
geom_vline(aes(xintercept = performance)) +
geom_point()
ggplot(best_data, aes(x=idx, # index as x
y=tsum,
col=performance)) +
geom_vline(aes(xintercept = performance) +
geom_point(size=1)
ggplot(best_data, aes(x=idx, # index as x
ggplot(best_data, aes(x=idx, # index as x
y=tsum,
col=performance)) +
geom_vline(aes(xintercept = filter(best_data, performance==TRUE)$idx)) +
geom_point(size=1)
ggplot(best_data, aes(x=idx, # index as x
y=tsum,
col=performance)) +
geom_vline(data =filter(best_data, performance==TRUE),
aes(xintercept = idx)) +
geom_point(size=1)
best_data <- data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) # index column
#print(row.names())
ggplot(best_data, aes(x=tsum, fill=performance)) +
geom_histogram()
best_data <- data %>%
group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
summarize(tsum = mean(tsum)) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) # index column
#print(row.names())
ggplot(best_data, aes(x=tsum, fill=performance)) +
geom_histogram()
ggplot(best_data, aes(x=idx, # index as x
y=tsum,
col=performance)) +
geom_vline(data =filter(best_data, performance==TRUE),
aes(xintercept = idx)) +
geom_point(size=1)
best_data <- data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) # index column
#print(row.names())
#ggplot(best_data, aes(x=tsum, fill=performance)) +
#  geom_histogram()
ggplot(best_data, aes(x=idx, # index as x
y=tsum,
col=performance)) +
geom_vline(data =filter(best_data, performance==TRUE),
aes(xintercept = idx)) +
geom_point(size=1)
ggplot(best_data, aes(x=tsum, # index as x
y=idx,
col=performance)) +
geom_hline(data =filter(best_data, performance==TRUE),
aes(yintercept = idx)) +
geom_point(size=1)
best_data = data.frame()
for (experiment in c("ERN", "LRP", "MMN", "N170", "N2pc", "N400", "P3")){
data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
filter(experiment==!!sym(experiment)) %>%
mutate(performance =
(ar==FALSE) &
ref=="P9P10"
base=="400ms" &
best_data = data.frame()
for (experiment in c("ERN", "LRP", "MMN", "N170", "N2pc", "N400", "P3")){
data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
filter(experiment==!!sym(experiment)) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) %>% # index column
rbind(best_data, .)
#print(row.names())
}
data
best_data = data.frame()
for (experiment_val in c("ERN", "LRP", "MMN", "N170", "N2pc", "N400", "P3")){
data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
filter(experiment==!!sym(experiment_val)) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) %>% # index column
rbind(best_data, .)
#print(row.names())
}
best_data = data.frame()
for (experiment_val in c("ERN", "LRP", "MMN", "N170", "N2pc", "N400", "P3")){
data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
filter(experiment==experiment_val) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) %>% # index column
rbind(best_data, .)
#print(row.names())
}
best_data
best_data = data.frame()
for (experiment_val in c("ERN", "LRP", "MMN", "N170", "N2pc", "N400", "P3")){
data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
filter(experiment==experiment_val) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) %>% # index column
rbind(best_data, .)
#print(row.names())
}
experiment_val
best_data
best_data = data.frame()
for (experiment_val in c("ERN", "LRP", "MMN", "N170", "N2pc", "N400", "P3")){
data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
filter(experiment==experiment_val) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
#ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) %>% # index column
rbind(best_data, .)
#print(row.names())
}
best_data
best_data = data.frame()
for (experiment_val in c("ERN", "LRP", "MMN", "N170", "N2pc", "N400", "P3")){
data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
filter(experiment==experiment_val) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
#ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) %>% # index column
bind_rows(best_data, .)
#print(row.names())
}
best_data
best_data = data.frame()
for (experiment_val in c("ERN", "LRP", "MMN", "N170", "N2pc", "N400", "P3")){
newdata <- data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
filter(experiment==experiment_val) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
#ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) # index column
best_data = rbind(best_data, new_data)
}
best_data = data.frame()
for (experiment_val in c("ERN", "LRP", "MMN", "N170", "N2pc", "N400", "P3")){
newdata <- data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
filter(experiment==experiment_val) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
#ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) # index column
best_data = rbind(best_data, newdata)
}
best_data
best_data = data.frame()
for (experiment_val in c("ERN", "LRP", "MMN", "N170", "N2pc", "N400", "P3")){
newdata <- data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
filter(experiment==experiment_val) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
#ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))) # index column
best_data = rbind(best_data, newdata)
}
#ggplot(best_data, aes(x=tsum, fill=performance)) +
#  geom_histogram()
ggplot(best_data, aes(x=tsum, # index as x
y=idx,
col=performance)) +
geom_hline(data =filter(best_data, performance==TRUE),
aes(yintercept = idx)) +
geom_point(size=1) +
facet_wrap(experiment ~.)
ggplot(best_data, aes(x=tsum, # index as x
y=idx,
col=performance)) +
geom_hline(data =filter(best_data, performance==TRUE),
aes(yintercept = idx)) +
geom_point(size=1) +
facet_wrap(experiment ~., scales = "free_x")
ggplot(best_data, aes(x=tsum, # index as x
y=idx,
col=performance)) +
geom_hline(data =filter(best_data, performance==TRUE),
aes(yintercept = idx)) +
#geom_point(size=1) +
stat_ecdf() +
facet_wrap(experiment ~., scales = "free_x")
ggplot(best_data, aes(x=tsum, # index as x
#y=idx,
col=performance)) +
geom_hline(data =filter(best_data, performance==TRUE),
aes(yintercept = idx)) +
#geom_point(size=1) +
stat_ecdf() +
facet_wrap(experiment ~., scales = "free_x")
ggplot(best_data, aes(x=tsum, # index as x
#y=idx)) +
geom_hline(data =filter(best_data, performance==TRUE),
aes(yintercept = idx)) +
#geom_point(size=1) +
stat_ecdf() +
facet_wrap(experiment ~., scales = "free_x")
ggplot(best_data, aes(x=tsum, # index as x
data <- tar_read(data_tsum)
best_data = data.frame()
for (experiment_val in c("ERN", "LRP", "MMN", "N170", "N2pc", "N400", "P3")){
newdata <- data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
filter(experiment==experiment_val) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
#ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))/1152) # index column
best_data = rbind(best_data, newdata)
}
#ggplot(best_data, aes(x=tsum, fill=performance)) +
#  geom_histogram()
ggplot(best_data, aes(x=tsum, # index as x
#y=idx)) +
geom_hline(data =filter(best_data, performance==TRUE),
aes(yintercept = idx)) +
#geom_point(size=1) +
stat_ecdf() +
facet_wrap(experiment ~., scales = "free_x")
)
q
data <- tar_read(data_tsum)
best_data = data.frame()
for (experiment_val in c("ERN", "LRP", "MMN", "N170", "N2pc", "N400", "P3")){
newdata <- data %>%
#group_by(ref, hpf, lpf, emc, mac, base, det, ar) %>%
#summarize(tsum = mean(tsum)) %>%
filter(experiment==experiment_val) %>%
mutate(performance =
(ar==FALSE) &
#ref=="P9P10"
#base=="400ms" &
(det=="linear") &
(emc=="None") &
(mac=="None") &
(hpf==0.5) &
(lpf==6)
) %>% # if these conditions are met, then write TRUE, else FALSE
#ungroup() %>% # because row names etc are not correct in a grouped df
arrange(tsum) %>% # sort by ascending tsum (if not, write desc(tsum))
mutate(idx = as.numeric(row.names(.))/1152) # index column
best_data = rbind(best_data, newdata)
}
#ggplot(best_data, aes(x=tsum, fill=performance)) +
#  geom_histogram()
ggplot(best_data, aes(x=tsum, # index as x
#y=idx
)) +
geom_hline(data =filter(best_data, performance==TRUE),
aes(yintercept = idx)) +
#geom_point(size=1) +
stat_ecdf() +
facet_wrap(experiment ~., scales = "free_x")
ggplot(best_data, aes(x=tsum, # index as x
#y=idx
)) +
geom_hline(data =filter(best_data, performance==TRUE),
aes(yintercept = idx),
color="blue") +
#geom_point(size=1) +
stat_ecdf() +
facet_wrap(experiment ~., scales = "free_x")
ggplot(best_data, aes(x=tsum, # index as x
#y=idx
)) +
geom_hline(data =filter(best_data, performance==TRUE),
aes(yintercept = idx),
color="grey",
) +
#geom_point(size=1) +
stat_ecdf() +
facet_wrap(experiment ~., scales = "free_x")
ggplot(best_data, aes(x=tsum, # index as x
#y=idx
)) +
geom_hline(data =filter(best_data, performance==TRUE),
aes(yintercept = idx),
color="darkgrey",
) +
#geom_point(size=1) +
stat_ecdf() +
facet_wrap(experiment ~., scales = "free_x")
source("~/GitHub/m4d/targets/_targets.R", echo=TRUE)
tar_make()
source("~/GitHub/m4d/targets/_targets.R", echo=TRUE)
tar_make()
source("~/GitHub/m4d/targets/_targets.R", echo=TRUE)
tar_make()
tar_visnetwork()
?tar_visnetwork
tar_visnetwork(c("description", "time"))
tar_visnetwork(label=c("description", "time"))
tar_visnetwork(targets_only=TRUE, label=c("description", "branches"))
