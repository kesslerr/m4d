test
test <- tar_read(data_eegnet_exp, branches=3)
test
tar_read(timeresolved_luck)
test %>% filter(experiment == "N170")
unqiue(test$experiment)
unique(test$experiment)
test <- test %>% filter(experiment == "N170")
unique(test$experiment)
unique(test$experiment)[1]
unique(test$experiment)[[1]
]
tar_make()
test!=""
tar_make()
tar_read(eegnet_HLM_exp_qq, branches=1)
tar_read(eegnet_HLM_exp_qq, branches=2)
tar_read(eegnet_HLM_exp_qq, branches=3)
tar_read(eegnet_HLM_exp_qq, branches=4)
tar_read(eegnet_HLM_exp_qq, branches=5)
tar_read(eegnet_HLM_exp_qq, branches=6)
tar_read(eegnet_HLM_exp_qq, branches=7)
tar_make()
tar_make()
tar_read(eegnet_HLM_qq_comb)
tar_make()
tar_make()
?tar_combine
?tar_target
tar_make()
tar_make()
tar_read(eegnet_HLM_qq_comb)
tar_make()
tar_read(eegnet_HLM_qq_comb)
tar_read(eegnet_HLM_qq_comb)
tar_make()
tar_read(eegnet_HLM_qq_comb)
tar_read(eegnet_HLM_exp_qq)
lst <- list()
for (i=1:7){
lst <- list()
for (i in 1:7){
lst[i] <- tar_read(eegnet_HLM_exp_qq, branches = i)
}
lst
combined <- ggarange(plotlist = lst)
library(ggpubr)
combined <- ggarange(plotlist = lst)
?ggarange
??ggarange
combined <- ggarrange(plotlist = lst)
combined
tar_make()
tar_make()
tar_make()
tar_read(eegnet_HLM_qq_comb)
eegnet_HLM_qq
?tar_Map
?tar_map
?tar_combine
?slice
?slices
??slices
tar_make()
tar_read(eegnet_HLM_qq_comb)
eegnet_HLM_exp_qq_agg
tar_read(eegnet_HLM_exp_qq_agg)
test <- tar_read(eegnet_HLM_exp_qq_agg)
test[[1]]
tar_make()
tar_read(eegnet_HLM_qq_comb)
tar_make()
tar_read(eegnet_HLM_qq_comb)
tar_make()
tar_read(eegnet_HLM_qq_comb)
#| echo: false
eegnet_HLM_qq_comb
#| echo: false
tar_read(eegnet_HLM_qq_comb)
#| echo: false
tar_read(timeresolved_luck)
tar_read(sliding_LM
)
summary(tar_read(sliding_LM))
summary(tar_read(sliding_LM_exp, branches=1))
summary(tar_read(sliding_LM_exp, branches=1))
summary(tar_read(sliding_LM_exp, branches=1)[[1]])
tar_make()
tar_visnetwork()
tar_read(sliding_LM_exp_emm_means, branches=1)
tar_read(sliding_LM_exp_emm_contrasts, branches=1)
tar_make()
tar_read(sliding_heatmap)
110/100-1
110/100
110/100-1
tar_make()
tar_read(sliding_heatmap)
tar_read(sliding_LM_emm_means_comb)
tar_make()
tar_read(sliding_heatmap)
?tar_config_set
tar_config_set(script = "_targets.R", project = "m4d", as_job = TRUE)
tar_make()
tar_read(eegnet_heatmap)
tar_visnetwork()
tar_make()
tar_make()
tar_make()
tar_make()
?tar_make
install.packages("rstudioapi")
tar_make()
targets::tar_meta(fields = warnings, complete_only = TRUE)
tar_visnetwork()
tar_make()
tar_visnetwork()
tar_read(heatmaps)
tar_make()
tar_read(heatmaps)
tar_read(sliding_LM)
test <- summary(tar_read(sliding_LM))
test
models <- summary(tar_read(sliding_LM))
corrs <- models$vcov %>%
cov2cor()
models$vcoc
models$vcov
models
models$cov.unscaled
class(models)
model <- tar_read(sliding_LM)
class(model)
models$cov.unscaled
if (class(model) == "lmer"){
corrs <- models$vcov %>%
cov2cor()
}else if (class(model) == "lm"){
corrs <- models$cov.unscaled %>%
cov2cor()
}
corrs
if (any(corrs) == 0){
stop("Some model fixed effect parameter shows a Correlation of either 0, 1, or -1 !")
}
corrs
model <- tar_read(eegnet_HLM)
models <- summary(model)
if (class(model) == "lmer"){
corrs <- models$vcov %>%
cov2cor()
}else if (class(model) == "lm"){
corrs <- models$cov.unscaled %>%
cov2cor()
}
corrs
tril(corr)
tril(corrs)
tril(corrs, -1)
tril(corrs, +1)
?tril
lower_triangular <- corrs[lower.tri(corrs, diag = FALSE)]
lower_triangular
if (class(model) == "lmer"){
corrs <- models$vcov %>%
cov2cor() %>%
lower.tri(diag=FALSE)
}else if (class(model) == "lm"){
corrs <- models$cov.unscaled %>%
cov2cor() %>%
lower.tri(diag=FALSE)
}
corrs
class(model)
# correlations between fixed effects should be not exactly 0, -1 or 1
if (class(model) == "lmerMod"){
corrs <- models$vcov %>%
cov2cor() %>%
lower.tri(diag=FALSE)
}else if (class(model) == "lm"){
corrs <- models$cov.unscaled %>%
cov2cor() %>%
lower.tri(diag=FALSE)
}
corrs
# correlations between fixed effects should be not exactly 0, -1 or 1
if (class(model) == "lmerMod"){
corrs <- models$vcov %>%
cov2cor() %>%
.[lower.tri(diag=FALSE)]
}else if (class(model) == "lm"){
corrs <- models$cov.unscaled %>%
cov2cor() %>%
.[lower.tri(diag=FALSE)]
}
if (class(model) == "lmerMod"){
corrs <- models$vcov %>%
cov2cor() %>%
lower.tri(diag=FALSE) %>%
extract(., .)
}else if (class(model) == "lm"){
corrs <- models$cov.unscaled %>%
cov2cor() %>%
lower.tri(diag=FALSE) %>%
extract(., .)
}
?extract?
x
?extract
# correlations between fixed effects should be not exactly 0, -1 or 1
if (class(model) == "lmerMod"){
corrs <- models$vcov %>%
cov2cor() %>%
lower.tri(diag=FALSE) %>%
extract(., .)
}else if (class(model) == "lm"){
corrs <- models$cov.unscaled %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
}
if (class(model) == "lmerMod"){
corrs <- models$vcov %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
}else if (class(model) == "lm"){
corrs <- models$cov.unscaled %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
}
corrs
if (any(corrs) %in% c(0,1,-1)){
stop("Some model fixed effect parameter shows a Correlation of either 0, 1, or -1 !")
}
corrs
if (any(corrs) %in% c(0,1,-1)){
stop("Some model fixed effect parameter shows a Correlation of either 0, 1, or -1 !")
}
min(corrs)
max(corrs)
is.null(corrs)
iany(corrs)
any(corrs)
any(corrs) == 0
if (any(corrs %in% c(0, 1, -1))) {
stop("Some model fixed effect parameter shows a Correlation of either 0, 1, or -1!")
}
corrs[3] = 0
if (any(corrs %in% c(0, 1, -1))) {
stop("Some model fixed effect parameter shows a Correlation of either 0, 1, or -1!")
}
model
type(model)
class(model)
model
model
models$coefficients[, "Std. Error"]
model <- tar_read(sliding_LM)
models <- summary(model)
# correlations between fixed effects should be not exactly 0, -1 or 1
if (class(model) == "lmerMod"){
corrs <- models$vcov %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
}else if (class(model) == "lm"){
corrs <- models$cov.unscaled %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
}
if (any(corrs %in% c(0, 1, -1))) {
stop("Some model fixed effect parameter shows a correlation of either 0, 1, or -1!")
}
models$coefficients[, "Std. Error"]
# stdev of fixed effects estimates should not be exactly 0
if (any(models$coefficients[, "Std. Error"]) == 0){
stop("Some model fixed effect parameter shows a Std. Error of 0 !")
}
# correlations between fixed effects should be not exactly 0, -1 or 1
corrs <- if (class(model) == "lmerMod") models$vcov else if (class(model) == "lm") models$cov.unscaled %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
corrs
## correlations between fixed effects should be not exactly 0, -1 or 1
corrs <- if (class(model) == "lmerMod") models$vcov else
if (class(model) == "lm") models$cov.unscaled %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
if (any(corrs %in% c(0, 1, -1))) {
stop("Some model fixed effect parameter shows a correlation of either 0, 1, or -1!")
}
corrs <-
if (class(model) == "lmerMod") models$vcov
else if (class(model) == "lm") models$cov.unscaled %>%
corrs <-
if (class(model) == "lmerMod") models$vcov else
if (class(model) == "lm") models$cov.unscaled %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
if (any(corrs %in% c(0, 1, -1))) {
stop("Some model fixed effect parameter shows a correlation of either 0, 1, or -1!")
}
class(model)
models$coefficients[, "Std. Error"]
?tar_target
tar_visnetwork()
tar_make()
tar_visnetwork()
## correlations between fixed effects should be not exactly 0, -1 or 1
corrs <-
if (class(model) == "lmerMod") models$vcov else
if (class(model) == "lm") models$cov.unscaled %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
corrs
as.numeric(corrs)
moddel
model
model <- tar_read(eegnet_HLM)
models <- summary(model)
## correlations between fixed effects should be not exactly 0, -1 or 1
corrs <-
if (class(model) == "lmerMod") models$vcov else
if (class(model) == "lm") models$cov.unscaled %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
if (any(corrs %in% c(0, 1, -1))) {
stop("Some model fixed effect parameter shows a correlation of either 0, 1, or -1!")
}
## correlations between fixed effects should be not exactly 0, -1 or 1
corrs <-
if (class(model) == "lmerMod") models$vcov else
if (class(model) == "lm") models$cov.unscaled %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
corrs
class(model) == "lmerMod"
models$vcov
models$vcov %>% cov2corr
models$vcov %>% cov2cor()
models$vcov %>% cov2cor() %>% { .[lower.tri(., diag = FALSE)] }
models <- summary(model)
## correlations between fixed effects should be not exactly 0, -1 or 1
corrs <-
if (class(model) == "lmerMod") models$vcov else
if (class(model) == "lm") models$cov.unscaled %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
corrs
if (class(model) == "lmerMod") models$vcov
## correlations between fixed effects should be not exactly 0, -1 or 1
corrs <-
if (class(model) == "lmerMod") models$vcov %>% else
corrs
## correlations between fixed effects should be not exactly 0, -1 or 1
corrs <-
{if (class(model) == "lmerMod") models$vcov else
if (class(model) == "lm") models$cov.unscaled} %>%
cov2cor() %>%
{ .[lower.tri(., diag = FALSE)] }
corrs
tar_make()
tar_visnetwork()
test <- tar_read(models_combined)
test
len(test)
length(test)
tar_make()
test <- tar_read(models_combined)
length(test)
test <- tar_read(models_combined, branches=1)
test
class(test)
tar_make()
tar_visnetwork()
model
models$coefficients[, "Std. Error"]
models$coefficients[, "Std. Error"][3]
tar_make()
test <- tar_read(convergence_checks, branches=1)
test
tar_read(convergence_checks, branches=2)
tar_read(convergence_checks, branches=3)
tar_read(convergence_checks, branches=4)
tar_make()
tar_make()
tar_read(sliding_LM_exp_qq_comb)
?ggarrange
tar_make()
tar_read(sliding_LM_exp_qq_comb)
tar_make()
tar_make()
tar_visnetwork()
?tar_visnetwork
tar_visnetwork(targets_only = TRUE)
tar_read(sliding_LM_qq_comb)
#| echo: false
tar_read(eegnet_HLM_qq_comb)
tar_read(sliding_LM_qq_comb)
#| echo: false
tar_read(eegnet_HLM_qq_comb)
tar_read(sliding_LM_qq_comb)
tar_make()
#| echo: false
tar_read(eegnet_heatmap)
#| echo: false
tar_read(timeresolved_luck)
#| echo: false
tar_read(heatmaps)
#| echo: false
tar_read(heatmaps)
#| echo: false
tar_read(heatmaps)
#| echo: false
tar_read(heatmaps)
#| echo: false
tar_read(eegnet_HLM_qq_comb)
tar_read(sliding_LM_qq_comb)
#| echo: false
tar_read(overview)
#| echo: false
tar_read(timeresolved_luck)
#| echo: false
tar_read(timeresolved_luck)
#| echo: false
tar_read(timeresolved_luck) + theme(legend.title = element_text(text="Significance"))
#| echo: false
tar_read(timeresolved_luck) +
scale_color_manual(values = c("Significance" = "darkred"),
labels = c("Significance"))
tar_make8)
tar_make())
tar_make()
#| echo: false
tar_read(timeresolved_luck)
?colorspace
??colorspace
tar_make()
#| echo: false
tar_read(timeresolved_luck)
#| echo: false
tar_read(timeresolved_luck)
#| echo: false
tar_read(heatmaps)
#| echo: false
tar_read(heatmaps)
#| echo: false
tar_read(eegnet_HLM_qq_comb)
tar_read(sliding_LM_qq_comb)
#| echo: false
tar_read(overview)
tar_visnetwork(targets_only=TRUE, label=c("description", "branches"))
tar_visnetwork()
tar_read(eegnet_HLM_emm)
tar_read(eegnet_HLM_emm, branches=1)
tar_read(eegnet_HLM_emm)[[1]]
tar_read(eegnet_HLM_emm)[[1]]
tar_read(eegnet_HLM_exp_emm)[[1]]
tar_read(eegnet_HLM_emm)[[1]]
tar_read(eegnet_HLM_exp_emm)[[1]][[1]]
tar_read(eegnet_HLM_emm)[[1]]
tar_read(eegnet_HLM_exp_emm)[[1]][[1]]
tar_read(eegnet_HLM_exp_emm)[[2]][[1]]
tar_read(eegnet_HLM_exp_emm)[[3]][[1]]
tar_read(eegnet_HLM_exp_emm)[[4]][[1]]
tar_read(eegnet_HLM_exp_emm)[[5]][[1]]
tar_read(eegnet_HLM_exp_emm)[[6]][[1]]
tar_read(eegnet_HLM_exp_emm)[[7]][[1]]
tar_read(eegnet_HLM_emm)[[1]]
tar_read(eegnet_HLM_exp_emm)[[1]][[1]]
tar_read(eegnet_HLM_exp_emm)[[2]][[1]]
tar_read(eegnet_HLM_exp_emm)[[3]][[1]]
tar_read(eegnet_HLM_exp_emm)[[4]][[1]]
tar_read(eegnet_HLM_exp_emm)[[5]][[1]]
tar_read(eegnet_HLM_exp_emm)[[6]][[1]]
tar_read(eegnet_HLM_exp_emm)[[7]][[1]]
tar_read(sliding_emm)[[1]]
tar_read(eegnet_HLM_emm)[[1]]
tar_read(eegnet_HLM_exp_emm)[[1]][[1]]
tar_read(eegnet_HLM_exp_emm)[[2]][[1]]
tar_read(eegnet_HLM_exp_emm)[[3]][[1]]
tar_read(eegnet_HLM_exp_emm)[[4]][[1]]
tar_read(eegnet_HLM_exp_emm)[[5]][[1]]
tar_read(eegnet_HLM_exp_emm)[[6]][[1]]
tar_read(eegnet_HLM_exp_emm)[[7]][[1]]
tar_read(sliding_LM_emm)[[1]]
tar_read(sliding_LM_emm_exp_emm)[[1]][[1]]
tar_read(eegnet_HLM_emm)[[1]]
tar_read(eegnet_HLM_exp_emm)[[1]][[1]]
tar_read(eegnet_HLM_exp_emm)[[2]][[1]]
tar_read(eegnet_HLM_exp_emm)[[3]][[1]]
tar_read(eegnet_HLM_exp_emm)[[4]][[1]]
tar_read(eegnet_HLM_exp_emm)[[5]][[1]]
tar_read(eegnet_HLM_exp_emm)[[6]][[1]]
tar_read(eegnet_HLM_exp_emm)[[7]][[1]]
tar_read(sliding_LM_emm)[[1]]
tar_read(sliding_LM_exp_emm)[[1]][[1]]
tar_read(sliding_LM_exp_emm)[[2]][[1]]
tar_read(sliding_LM_exp_emm)[[3]][[1]]
tar_read(sliding_LM_exp_emm)[[4]][[1]]
tar_read(sliding_LM_exp_emm)[[5]][[1]]
tar_read(sliding_LM_exp_emm)[[6]][[1]]
tar_read(sliding_LM_exp_emm)[[7]][[1]]
tar_read(sliding_LM_emm_means_comb)
tar_read(sliding_LM_emm_contrasts_comb)
tar_read(eegnet_HLM_emm_means_comb)
tar_read(eegnet_HLM_emm_means_comb)
tar_read(eegnet_HLM_emm_contrasts_comb)
tar_read(sliding_LM_emm_contrasts_comb)
#| echo: false
tar_read(heatmaps)
#| echo: false
tar_read(eegnet_HLM_qq_comb)
tar_read(sliding_LM_qq_comb)
